# example to show adding of headers

admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 20000
static_resources:
  clusters:
  - name: service_egoserver
    connect_timeout: 1s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    hosts:
    - socket_address:
        address: egoserver
        port_value: 3000
  listeners:
  - name: egoserver_basic
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 20001
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: AUTO
          stat_prefix: ingress_http
          http_filters:
          - name: envoy.router
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  host_rewrite: egoserver_basic
                  cluster: service_egoserver
  - name: egoserver_custom
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 20002
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: AUTO
          stat_prefix: ingress_http
          http_filters:
          - name: envoy.router
          use_remote_address: true # adds x-forwarded-for in request
          via: the envoy proxy # adds via in both response and request
          server_name: custom egoserver ftw # view this in the response
          add_user_agent: true # adds x-envoy-downstream-service-cluster to request
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  host_rewrite: egoserver_custom # modifies the host in the request
                  cluster: service_egoserver